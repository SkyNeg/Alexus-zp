а теперь детали:
ограничить набор методов шифрования, которые использует mod_ssl со стороны пользователя не сложно - деляется добавлением стоки 
SSLCipherSuite HIGH:MEDIUM
в .htaccess файл
хуже дела обстаят именно с этим "сайтом для проверки возможностей ssl"


https://ghcp.ecommerce.com/index.php/helpdeskticket.dspFrmTicketModify/hd_ticketid/1106468



да - ты правильно понял, приходится менять кастомерский конфигурационный файл для апача
hsphere не предоставляет адекватных возможностей для внесения изменений в "свободной форме" в этот файл со стороны кастомера, кроме этого хсфера будет "сбрасывать" изменения, вносимые, например, мной сразу же как только кастомер что-то изменит в web options
теперь в двух словах про .htaccess и SSLCipherSuite HIGH:MEDIUM
есть некоторое различие между тем, чтоб выполнить SSL-handshake (то, на основе чего http://www.serversniff.net/sslcheck.php делает выводы о поддерживаемых ssl ciphers) и http запросом на основе установленного ssl соединения. Т.е. для того, чтоб ограничить набор методов ssl-шифрования на стадии "ssl handshake" изменений в .htaccess недостаточно, но для того, чтоб ограничить работу по https с использованием "слабых шифров" директивы "SSLCipherSuite HIGH:MEDIUM" вполне достаточно.
Вот как это можно проверить... 
сейчас директива "SSLCipherSuite HIGH:MEDIUM" добавлена в .htaccess, и пользовательский конфиг (который я менял) - в неизменённом виде. Пробуем шифр EXP-RC4-MD5 (слабый 40-битный):
$ curl --ciphers EXP-RC4-MD5 https://patpaynedistributors.com

curl: (52) SSL read: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure, errno 0
$
что доказывает, что ограничение работает, однако это ограничние не будет видно в выводе serversniff.net по той причине, что тест на serversniff.net не доходит до "проверки https", - он выполняет проверку только стадии ssl handshake